[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "sigray-ml-platform"
description = "Advanced 3D image enhancement platform using deep learning"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Sigray, Inc.", email = "support@sigray.com"},
]
maintainers = [
    {name = "Sigray, Inc.", email = "support@sigray.com"},
]
keywords = [
    "machine learning",
    "deep learning", 
    "image processing",
    "3d imaging",
    "tiff",
    "u-net",
    "pytorch",
    "sigray",
    "scientific imaging",
    "image enhancement",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.9.0",
    "torchvision>=0.10.0",
    "numpy>=1.21.0",
    "tifffile>=2021.7.2",
    "Pillow>=8.0.0",
    "pathlib2>=2.3.0; python_version<'3.4'",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/sigray/ml-platform"
Documentation = "https://github.com/sigray/ml-platform/wiki"
Repository = "https://github.com/sigray/ml-platform.git"
"Bug Reports" = "https://github.com/sigray/ml-platform/issues"
Changelog = "https://github.com/sigray/ml-platform/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.0",
    "isort>=5.0",
]
tensorboard = [
    "tensorboard>=2.0",
    "tensorboardX>=2.0",
]
monitoring = [
    "psutil>=5.0",
    "GPUtil>=1.4",
]
gui = [
    "pillow>=8.0",
    "matplotlib>=3.0",
]
all = [
    "pytest>=6.0",
    "pytest-cov>=2.0", 
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.0",
    "isort>=5.0",
    "tensorboard>=2.0",
    "tensorboardX>=2.0",
    "psutil>=5.0",
    "GPUtil>=1.4",
    "pillow>=8.0",
    "matplotlib>=3.0",
]

[project.scripts]
sigray-train = "cli.train_cli:main"
sigray-infer = "cli.inference_cli:main"
sigray-gui = "gui.main_window:main"
# Legacy aliases
"3d-enhance-train" = "cli.train_cli:main"
"3d-enhance-infer" = "cli.inference_cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tifffile.*",
    "torch.*",
    "torchvision.*",
    "tensorboard.*",
    "PIL.*",
    "matplotlib.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
    "large_data: marks tests that require large test data",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]